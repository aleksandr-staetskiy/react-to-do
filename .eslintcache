[{"/Users/aleksandr/projects/learn-react/src/index.js":"1","/Users/aleksandr/projects/learn-react/src/App.js":"2","/Users/aleksandr/projects/learn-react/src/reportWebVitals.js":"3","/Users/aleksandr/projects/learn-react/src/components/TodoList.js":"4","/Users/aleksandr/projects/learn-react/src/components/Todo.js":"5","/Users/aleksandr/projects/learn-react/src/components/Form.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1323,"mtime":1607861138959,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":495,"mtime":1607861138963,"results":"11","hashOfConfig":"8"},{"size":941,"mtime":1607864102414,"results":"12","hashOfConfig":"8"},{"size":1229,"mtime":1607805695742,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e98j2e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/aleksandr/projects/learn-react/src/index.js",[],["28","29"],"/Users/aleksandr/projects/learn-react/src/App.js",["30"],"import { useState, useEffect } from 'react'\nimport './App.css';\nimport TodoList from \"./components/TodoList\";\nimport Form from \"./components/Form\";\n\nconst App = () => {\n    const [textInput, setTextInput] = useState('')\n    const [todo, setTodo] = useState([])\n    const [status, setStatus] = useState('all')\n    const [filteredTodos, setFilteredTodos] = useState([])\n\n    const filterTodoList = () => {\n        switch (status) {\n            case 'completed':\n                setFilteredTodos(todo.filter( item => item.completed === true ))\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todo.filter( item => item.completed === false ))\n                break;\n            default:\n                setFilteredTodos(todo)\n                break;\n        }\n    }\n\n    useEffect(() => {\n        filterTodoList();\n    }, [status, todo])\n\n  return (\n      <div className=\"wrapper\">\n          <Form\n              textInput={textInput}\n              setTextInput={setTextInput}\n              setTodo={setTodo}\n              todo={todo}\n              status={status}\n              setStatus={setStatus}\n          />\n          <TodoList\n              todo={todo}\n              setTodo={setTodo}\n              filteredTodos={filteredTodos}\n          />\n      </div>\n  );\n}\n\nexport default App;\n","/Users/aleksandr/projects/learn-react/src/reportWebVitals.js",[],"/Users/aleksandr/projects/learn-react/src/components/TodoList.js",[],"/Users/aleksandr/projects/learn-react/src/components/Todo.js",[],"/Users/aleksandr/projects/learn-react/src/components/Form.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":28,"column":8,"nodeType":"37","endLine":28,"endColumn":22,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterTodoList'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [filterTodoList, status, todo]",{"range":"44","text":"45"},[856,870],"[filterTodoList, status, todo]"]